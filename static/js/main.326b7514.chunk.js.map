{"version":3,"sources":["components/Logo.js","components/RoboCard.js","data/robots.js","components/RoboList.js","store/robots/actions.js","store/robots/types.js","components/Searchbar.js","store/search/actions.js","store/search/types.js","components/ThemeToggleButton.js","components/ErrorBoundary.js","App.js","serviceWorker.js","store/search/reducer.js","store/reducers.js","store/robots/reducer.js","index.js","store/store.js"],"names":["Logo","className","RoboCard","name","email","image","alt","loading","src","robots","id","username","connect","search","isSearching","names","emails","ids","fetchAll","type","payload","useState","map","robot","key","searchById","callback","filtered","filter","searchByName","toLowerCase","includes","searchByEmail","clearSearch","searchText","setSearchText","value","onChange","e","target","length","Number","isInteger","parseInt","placeholder","ThemeToggleButton","onClick","document","body","classList","contains","remove","add","ErrorBoundary","state","hasError","message","error","this","setState","props","children","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","INITIAL_STATE","combineReducers","action","store","createStore","reducers","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.326b7514.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <h1>Robo Friends</h1>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RoboCard = ({ name, email, image }) => {\n  return (\n    <div className=\"robo-card\">\n      <img className=\"is-robo-image\" alt=\"robots\" loading=\"lazy\" src={image} />\n      <h3 className=\"is-robo-name\">{name}</h3>\n      <p className=\"is-robo-email\">{email}</p>\n    </div>\n  );\n};\n\nRoboCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n};\n\nexport default RoboCard;\n","export const robots = [\n  {\n    id: 1,\n    image: \"https://robohash.org/1?size=200x200\",\n    name: \"Leanne Graham\",\n    username: \"Bret\",\n    email: \"Sincere@april.biz\",\n  },\n  {\n    id: 2,\n    image: \"https://robohash.org/2?size=200x200\",\n    name: \"Ervin Howell\",\n    username: \"Antonette\",\n    email: \"Shanna@melissa.tv\",\n  },\n  {\n    id: 3,\n    image: \"https://robohash.org/3?size=200x200\",\n    name: \"Clementine Bauch\",\n    username: \"Samantha\",\n    email: \"Nathan@yesenia.net\",\n  },\n  {\n    id: 4,\n    image: \"https://robohash.org/4?size=200x200\",\n    name: \"Patricia Lebsack\",\n    username: \"Karianne\",\n    email: \"Julianne.OConner@kory.org\",\n  },\n  {\n    id: 5,\n    image: \"https://robohash.org/5?size=200x200\",\n    name: \"Chelsey Dietrich\",\n    username: \"Kamren\",\n    email: \"Lucio_Hettinger@annie.ca\",\n  },\n  {\n    id: 6,\n    image: \"https://robohash.org/6?size=200x200\",\n    name: \"Mrs. Dennis Schulist\",\n    username: \"Leopoldo_Corkery\",\n    email: \"Karley_Dach@jasper.info\",\n  },\n  {\n    id: 7,\n    image: \"https://robohash.org/7?size=200x200\",\n    name: \"Kurtis Weissnat\",\n    username: \"Elwyn.Skiles\",\n    email: \"Telly.Hoeger@billy.biz\",\n  },\n  {\n    id: 8,\n    image: \"https://robohash.org/8?size=200x200\",\n    name: \"Nicholas Runolfsdottir V\",\n    username: \"Maxime_Nienow\",\n    email: \"Sherwood@rosamond.me\",\n  },\n  {\n    id: 9,\n    image: \"https://robohash.org/9?size=200x200\",\n    name: \"Glenna Reichert\",\n    username: \"Delphine\",\n    email: \"Chaim_McDermott@dana.io\",\n  },\n  {\n    id: 10,\n    image: \"https://robohash.org/10?size=200x200\",\n    name: \"Clementina DuBuque\",\n    username: \"Moriah.Stanton\",\n    email: \"Rey.Padberg@karina.biz\",\n  },\n];\n","import React, { useState } from \"react\";\nimport RoboCard from \"./RoboCard\";\nimport { connect } from \"react-redux\";\nimport { fetchAll } from \"../store/robots/actions\";\n\nconst RoboList = ({ fetchAll, robots }) => {\n  useState(() => {\n    fetchAll();\n  }, []);\n  return (\n    <section className=\"list-robots\">\n      {robots.map((robot) => (\n        <RoboCard key={`${robot.id}`} {...robot} />\n      ))}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({ robots, search }) => {\n  if (search.isSearching) {\n    robots = [...search.names, ...search.emails, ...search.ids];\n  }\n  return { robots: robots };\n};\n\nexport default connect(mapStateToProps, { fetchAll })(RoboList);\n","import { robots } from \"../../data/robots\";\nimport { FETCH_ALL } from \"./types\";\n\nexport const fetchAll = () => {\n  return { type: FETCH_ALL, payload: robots };\n};\n","export const FETCH_ALL = \"FETCH_ALL\";\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  searchById,\n  searchByName,\n  searchByEmail,\n  clearSearch,\n} from \"../store/search/actions\";\n\nconst Searchbar = ({\n  searchById,\n  searchByName,\n  searchByEmail,\n  clearSearch,\n}) => {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleOnChange = (e) => {\n    const value = e.target.value;\n    setSearchText(value);\n\n    if (value.length === 0) {\n      clearSearch();\n      return;\n    }\n\n    if (Number.isInteger(value)) {\n      searchById(parseInt(value));\n      return;\n    }\n\n    if (searchText.includes(\"@\")) {\n      searchByEmail(value);\n      return;\n    }\n\n    searchByName(value);\n  };\n  return (\n    <div className=\"searchbar-container\">\n      <input\n        type=\"text\"\n        value={searchText}\n        onChange={handleOnChange}\n        placeholder=\"Search for robots\"\n      />\n    </div>\n  );\n};\n\nexport default connect(null, {\n  searchById,\n  searchByName,\n  searchByEmail,\n  clearSearch,\n})(Searchbar);\n","import {\n  SEARCH_BY_ID,\n  SEARCH_BY_EMAIL,\n  SEARCH_BY_NAME,\n  CLEAR_SEARCH,\n} from \"./types\";\nimport { robots } from \"../../data/robots\";\n\nexport const searchByEmail = (email, callback) => {\n  const filtered = robots.filter((robot) =>\n    robot.email.toLowerCase().includes(email.toLowerCase()) ? robot : null\n  );\n\n  if (!!callback) {\n    callback();\n  }\n\n  return { type: SEARCH_BY_EMAIL, payload: filtered };\n};\n\nexport const searchById = (id, callback) => {\n  const filtered = robots.filter((robot) => robot.id === id);\n\n  if (!!callback) {\n    callback();\n  }\n\n  return { type: SEARCH_BY_ID, payload: filtered };\n};\n\nexport const searchByName = (name, callback) => {\n  const filtered = robots.filter((robot) =>\n    robot.name.toLowerCase().includes(name.toLowerCase()) ? robot : null\n  );\n\n  if (!!callback) {\n    callback();\n  }\n\n  return { type: SEARCH_BY_NAME, payload: filtered };\n};\n\nexport const clearSearch = () => {\n  return { type: CLEAR_SEARCH };\n};\n","export const SEARCH_BY_NAME = \"SEARCH_BY_NAME\";\nexport const SEARCH_BY_EMAIL = \"SEARCH_BY_EMAIL\";\nexport const SEARCH_BY_ID = \"SEARCH_BY_ID\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\n","import React from \"react\";\n\nconst ThemeToggleButton = () => {\n  const toggleTheme = () => {\n    if (document.body.classList.contains(\"theme-light\")) {\n      document.body.classList.remove(\"theme-light\");\n      document.body.classList.add(\"theme-dark\");\n    } else {\n      document.body.classList.remove(\"theme-dark\");\n      document.body.classList.add(\"theme-light\");\n    }\n  };\n\n  return (\n    <div className=\"theme-switcher\">\n      <button onClick={toggleTheme} className=\"theme-switch-button\">\n        Theme\n      </button>\n    </div>\n  );\n};\n\nexport default ThemeToggleButton;\n","import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  state = { hasError: false, message: \"\" };\n\n  componentDidCatch(error) {\n    this.setState({ hasError: true, message: error });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Error Occured: {this.state.message}</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport Logo from \"./components/Logo\";\nimport RoboList from \"./components/RoboList\";\nimport Searchbar from \"./components/Searchbar\";\nimport ThemeToggleButton from \"./components/ThemeToggleButton\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nfunction App() {\n  return (\n    <main className=\"app\">\n      <ThemeToggleButton />\n      <Logo />\n      <Searchbar />\n\n      <ErrorBoundary>\n        <RoboList />\n      </ErrorBoundary>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  SEARCH_BY_NAME,\n  SEARCH_BY_ID,\n  SEARCH_BY_EMAIL,\n  CLEAR_SEARCH,\n} from \"./types\";\n\nconst INITIAL_STATE = {\n  names: [],\n  emails: [],\n  ids: [],\n  isSearching: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SEARCH_BY_NAME:\n      return { ...state, names: action.payload, isSearching: true };\n    case SEARCH_BY_EMAIL:\n      return { ...state, emails: action.payload, isSearching: true };\n    case SEARCH_BY_ID:\n      return { ...state, ids: action.payload, isSearching: true };\n    case CLEAR_SEARCH:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport searchReducer from \"./search/reducer\";\nimport robotsReducer from \"./robots/reducer\";\n\nexport default combineReducers({\n  search: searchReducer,\n  robots: robotsReducer,\n});\n","import { FETCH_ALL } from \"./types\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { getStore } from \"./store/store\";\n\nconst store = getStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nexport const getStore = () => {\n  const store = createStore(reducers);\n\n  return store;\n};\n"],"sourceRoot":""}